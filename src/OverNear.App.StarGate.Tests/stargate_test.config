<?xml version="1.0" encoding="utf-8"?>
<StarGate xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  ReplicaName="rs1">
	<ReadStateRepo xsi:type="ReadStateElasticAsyncRepo" Path="http://localhost:9200/stargate/ReadState"
				   InnerLoopSleepMs="50" OuterLoopSleepMs="300" />
	<Routes xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

		<!--
		<Route xsi:type="RouteByNameSpace" NameSpace="^User\.User$" Continue="true" OpLogType="Writes">
			<Trigger xsi:type="FullObjectDecorator">
				<Trigger xsi:type="TransformJsDecorator">
					<Logic>
						<![CDATA[
function(o) {
	var d = null;
	if(o.op == 'u' && o.o2 != null)
		d = o.o2;
	else
		d = o.o;
	
	var r = null;
	if(o.op == 'u' || o.op == 'i') {
		r = {
			'_id' : d._id,
			'op' : o.op,
			'CrOn' : d.CrOn,
			'Email' : d.Email,
			'Evts' : d.Evts,
			'Fn' : d.Fn,
			'Foll': d.Foll,
			'Ln' : d.Ln,
			'Ping' : d.Ping
		};
	}
	else {
		r = {
			'_id' : d._id,
			'op' : o.op
		};
	}
	return r;
};
]]>
					</Logic>
					<Trigger xsi:type="ElasticSearchPublisher" EndPoint="http://localhost:9200/identities/User" RouteField="" />
				</Trigger>
			</Trigger>
		</Route>

		<Route xsi:type="RouteByNameSpace" NameSpace="^Profile\.Profile$" Continue="true" OpLogType="Writes">
			<Trigger xsi:type="FullObjectDecorator">
				<Trigger xsi:type="TransformJsDecorator">
					<Logic>
						<![CDATA[
function(o) {
	var d = null;
	if(o.op == 'u' && o.o2 != null)
		d = o.o2;
	else
		d = o.o;
		
	var r = { 
		'_id' : d._id,
		'op' : o.op
	};
	if(o.op == 'u' || o.op == 'i') {
		r.Sn = d.Sn;
		r.Dn = d.Dn;
		r.Desc = d.Desc;
		r.Evts = d.Evts;
		r.Fwing = d.Fwing;
		r.Fwers = d.Fwers;
		r.Veri = d.Veri;
		r.Tags = d.Tags;
		r.CrOn = d.CrOn;
		r.UpDt = d.UpDt;
		
		if(d.Type != null)
			r.Type = d.Type;
		
		if(d.DCat != null)
			r.DCat = d.DCat;
	}
	return r;
};
]]>
					</Logic>
					<Trigger xsi:type="ElasticSearchPublisher" EndPoint="http://localhost:9200/identities/Profile" />
				</Trigger>
			</Trigger>
		</Route>
		-->

		<Route xsi:type="RouteByNameSpace" NameSpace="^Event\.Event$" Continue="true" OpLogType="Writes">
			<Trigger xsi:type="FullObjectDecorator">
				<Trigger xsi:type="TransformJsDecorator">
					<Logic>
						<![CDATA[
function(o) {
	var d = null;
	if(o.op == 'u' && o.o2 != null)
		d = o.o2;
	else
		d = o.o;
	
	var ComputeTTL = function(ed, ttl) {
		var dt = new Date(ed["$date"]);
		dt.setSeconds(dt.getSeconds() + ttl);
		var now = new Date();
		return dt - now;
	};
	
	var r = null;
	var ttl = 0; 
	if(d.TTL > 0) {
		ttl = ComputeTTL(d.Off, d.TTL);
		if(ttl == 0)
			ttl = -1;
	}
	if(d.Rm == false && ttl >= 0 && (o.op == 'u' || o.op == 'i')) {	
		r = {
			'_id' : d._id,
			'op' : o.op,
			'Usr' : d.Usr,
			'Msg' : d.Msg,
			
			'On' : d.On,
			'Off' : d.Off,
			'CrOn' : d.CrOn,
			
			'Loc' : {
				'lat' : d.Loc[1],
				'lon' : d.Loc[0]
			},
			
			'Pub' : false //TODO: pull from "Usr"
		};
		
		if(ttl > 0)
			r['_ttl'] = ttl;
		
		if(d.Msk != null)
			r['Msk'] = d.Msk;
		
		if(d.Cmms > 0)
			r['Cmms'] = d.Cmms;
		
		if(d.Like != null)
			r['Like'] = d.Like;
			
		if(d.Tags != null)
			r['Tags'] = d.Tags;
		
		if(d.Atnd > 0)
			r['Atnd'] = d.Atnd;
			
		if(d.Pics != null)
			r['Pics'] = d.Pics.length;
		else
			r['Pics'] = 0;
	}
	else
		r = { '_id' : d._id, 'op' : 'd' }; //force delete
		
	return r;
};
]]>
					</Logic>
					<Trigger xsi:type="ElasticIndexDecorator" Path="http://localhost:9200/events/">
						<Trigger xsi:type="CallOnceDecorator" Path="http://localhost:9200/events/Event/_mapping" Verb="PUT" ContentType="application/json">
							<Content>
								<![CDATA[
{
  "Event": {
    "date_detection" : false,
	"numeric_detection" : false,
	"_source" : {
	  "compress" : true,
	  "compress_threshold" : "2kb"
	},
	"_timestamp" : { "enabled" : true },
	"_ttl" : { "enabled" : true },
	
    "properties": {
	  "Cmms" : { "type" : "integer" },
	  "Like" : { "type" : "integer" },
	  "Atnd" : { "type" : "integer" },
	  "Msk" : { "type" : "integer" },
	  "Pics" : { "type" : "integer" },
	
	  "_id" : { "type" : "string", "index" : "not_analyzed" },
	  "Usr" : { "type" : "string", "index" : "not_analyzed" },
	  "Msg" : { "type" : "string", "index" : "analyzed" },
	  "Tags" : { "type" : "string", "index" : "analyzed" },
	  
	  "On": { "type" : "date" }, //"format" : "YYYY-MM-dd\\THH:mm:ss.SSSSS"
	  "Off": { "type" : "date" },
	  "CrOn": { "type" : "date" },
	  
	  "Pub" : { "type" : "boolean" },
	  
      "Loc": {
        "type": "geo_point",
		"lat_lon" : true,
		"normalize" : true,
		"ignore_conflicts" : true,
        "fielddata" : {
            "format" : "compressed",
            "precision" : "3m"
        }
      }
    }
  }
}]]>
							</Content>
							<Trigger xsi:type="ElasticSearchPublisher" TieBreakDates="true" EndPoint="http://localhost/events/Event?replication=async&amp;timeout=5s" />
						</Trigger>
					</Trigger>
				</Trigger>
			</Trigger>
		</Route>

	</Routes>
	<ReadThreads>
		<!--Test Connection-->
		<ReadThread Name="bamboo_01" Path="mongodb://localhost/test_nunit" Match="*" MasterOnly="true" />
		
	</ReadThreads>
</StarGate>